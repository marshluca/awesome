# https://github.com/railsmachine/moonshine_sidekiq/tree/master/templates

rails_env = "<%= rails_env %>"
rails_root = "<%= "#{deploy_to!}/#{current_path!}" %>"

God.watch do |w|
  w.name     = '<%= app %>_sidekiq'
  # w.group    = '<%= app %>_sidekiq'
  w.interval = 30.seconds
  w.log      = File.join(rails_root, 'log', "#{w.name}.god.log")
  # w.uid = "<%= user! %>"
  # w.gid = "<%= group! %>"
  w.env      = { 'RAILS_ENV' => rails_env, 'HOME' => '/home/<%= user %>' }
  w.dir      = rails_root
  w.pid_file = "#{rails_root}/tmp/pids/#{w.name}.pid"
  w.start    = "bundle exec sidekiq --environment #{rails_env} --config #{rails_root}/config/sidekiq.yml --pidfile #{w.pid_file} --daemon --logfile #{w.log}"
  w.stop     = "bundle exec sidekiqctl stop #{w.pid_file}"

  # determine the state on startup
  w.transition(:init, { true => :up, false => :start }) do |on|
    on.condition(:process_running) do |c|
      c.running = true
    end
  end

  # determine when process has finished starting
  w.transition([:start, :restart], :up) do |on|
    on.condition(:process_running) do |c|
      c.running = true
      c.interval = 5.seconds
    end

    # failsafe
    on.condition(:tries) do |c|
      c.times = 5
      c.transition = :start
      c.interval = 5.seconds
    end
  end

  # start if process is not running
  w.transition(:up, :start) do |on|
    on.condition(:process_running) do |c|
      c.running = false
    end
  end
end
